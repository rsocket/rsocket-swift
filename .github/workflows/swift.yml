name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Test on macOS
      if: runner.os == 'macOS'
      # filter regex excludes all tests targets which contain the word "Performance" in their name
      run: >
        xcodebuild test
        -scheme RSocket-Package
        -parallelizeTargets
        -skip-testing RSocketCorePerformanceTests
        -parallel-testing-enabled
        -destination 'platform=macOS'
    - name: Test on iOS Simulator
      if: runner.os == 'macOS'
      run: >
        xcodebuild test
        -scheme RSocket-Package
        -parallelizeTargets
        -parallel-testing-enabled
        -skip-testing RSocketCorePerformanceTests
        -sdk iphonesimulator
        -destination 'platform=iOS Simulator,name=iPhone 12'
    - name: Test on Linux
      if: runner.os == 'Linux'
      # filter regex excludes all tests targets which contain the word "Performance" in their name
      run: >
        swift test
        -v
        --parallel
        --enable-test-discovery
        --filter="^((?!(Performance)).)*\..*$"
    - name: Build & Run Performance Tests
      # filter regex includes only test targets which contain the word "Performance" in their name
      # build with optimisation enabled
      run: >
        swift test
        -Xswiftc="-O"
        --enable-test-discovery
        --filter="^.*(Performance).*\..*"
